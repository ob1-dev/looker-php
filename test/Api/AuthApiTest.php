<?php
/**
 * AuthApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Looker API 4.0 (Experimental) Reference
 *
 * Welcome to the future! API 4.0 co-exists with APIs 3.1 and 3.0. (3.0 should no longer be used.) We've tagged 4.0 as \"experimental\" to indicate work still planned for API 4.0 may include breaking changes. Please pardon our dust while we remodel a few rooms!  ### Authorization  The classic method of API authorization uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page.  API 4.0 adds additional ways to authenticate API requests, including OAuth and CORS requests.  For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization).   ### API Explorer  The API Explorer is a Looker-provided utility with many new and unique features for learning and using the Looker API and SDKs. It is a replacement for the 'api-docs' page currently provided on Looker instances.  For details, see the [API Explorer documentation](https://looker.com/docs/r/api/explorer).   ### Looker Language SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. SDKs for a variety of programming languages are also provided to streamline using the API. Looker has an OpenSource [sdk-codegen project](https://github.com/looker-open-source/sdk-codegen) that provides several language SDKs. Language SDKs generated by `sdk-codegen` have an Authentication manager that can automatically authenticate API requests when needed.  For details on available Looker SDKs, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks).   ### API Versioning  Future releases of Looker expand the latest API version release-by-release to securely expose more and more of the core power of the Looker platform to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning (but we will try to avoid doing that). Stable (non-beta) API endpoints should not receive breaking changes in future releases.  For details, see [Looker API Versioning](https://looker.com/docs/r/api/versioning).   ### In This Release  API 4.0 version was introduced so we can make adjustments to API functions, parameters, and response types to fix bugs and inconsistencies. These changes fall outside the bounds of non-breaking additive changes we can make to our stable API 3.1.  One benefit of these type adjustments in API 4.0 is dramatically better support for strongly typed languages like TypeScript, Kotlin, Swift, Go, C#, and more.  While API 3.1 is still the de-facto Looker API (\"current\", \"stable\", \"default\", etc), the bulk of our development activity has shifted to API 4.0, where all new features are added.  The API Explorer can be used to [interactively compare](https://looker.com/docs/r/api/explorer#comparing_api_versions) the differences between API 3.1 and 4.0.
 *
 * The version of the OpenAPI document: 4.0.21.10
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AuthApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AuthApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for activateAppUser
     *
     * Activate OAuth App User.
     *
     */
    public function testActivateAppUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for allOauthClientApps
     *
     * Get All OAuth Client Apps.
     *
     */
    public function testAllOauthClientApps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for allUserLoginLockouts
     *
     * Get All User Login Lockouts.
     *
     */
    public function testAllUserLoginLockouts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createEmbedUrlAsMe
     *
     * Create Embed URL.
     *
     */
    public function testCreateEmbedUrlAsMe()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOidcTestConfig
     *
     * Create OIDC Test Configuration.
     *
     */
    public function testCreateOidcTestConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createSamlTestConfig
     *
     * Create SAML Test Configuration.
     *
     */
    public function testCreateSamlTestConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createSsoEmbedUrl
     *
     * Create SSO Embed Url.
     *
     */
    public function testCreateSsoEmbedUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deactivateAppUser
     *
     * Deactivate OAuth App User.
     *
     */
    public function testDeactivateAppUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOauthClientApp
     *
     * Delete OAuth Client App.
     *
     */
    public function testDeleteOauthClientApp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOidcTestConfig
     *
     * Delete OIDC Test Configuration.
     *
     */
    public function testDeleteOidcTestConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSamlTestConfig
     *
     * Delete SAML Test Configuration.
     *
     */
    public function testDeleteSamlTestConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUserLoginLockout
     *
     * Delete User Login Lockout.
     *
     */
    public function testDeleteUserLoginLockout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAndParseSamlIdpMetadata
     *
     * Parse SAML IdP Url.
     *
     */
    public function testFetchAndParseSamlIdpMetadata()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for forcePasswordResetAtNextLoginForAllUsers
     *
     * Force password reset.
     *
     */
    public function testForcePasswordResetAtNextLoginForAllUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invalidateTokens
     *
     * Invalidate Tokens.
     *
     */
    public function testInvalidateTokens()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ldapConfig
     *
     * Get LDAP Configuration.
     *
     */
    public function testLdapConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oauthClientApp
     *
     * Get OAuth Client App.
     *
     */
    public function testOauthClientApp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oidcConfig
     *
     * Get OIDC Configuration.
     *
     */
    public function testOidcConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oidcTestConfig
     *
     * Get OIDC Test Configuration.
     *
     */
    public function testOidcTestConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for parseSamlIdpMetadata
     *
     * Parse SAML IdP XML.
     *
     */
    public function testParseSamlIdpMetadata()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for passwordConfig
     *
     * Get Password Config.
     *
     */
    public function testPasswordConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for registerOauthClientApp
     *
     * Register OAuth App.
     *
     */
    public function testRegisterOauthClientApp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for samlConfig
     *
     * Get SAML Configuration.
     *
     */
    public function testSamlConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for samlTestConfig
     *
     * Get SAML Test Configuration.
     *
     */
    public function testSamlTestConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchUserLoginLockouts
     *
     * Search User Login Lockouts.
     *
     */
    public function testSearchUserLoginLockouts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sessionConfig
     *
     * Get Session Config.
     *
     */
    public function testSessionConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testLdapConfigAuth
     *
     * Test LDAP Auth.
     *
     */
    public function testTestLdapConfigAuth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testLdapConfigConnection
     *
     * Test LDAP Connection.
     *
     */
    public function testTestLdapConfigConnection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testLdapConfigUserAuth
     *
     * Test LDAP User Auth.
     *
     */
    public function testTestLdapConfigUserAuth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testLdapConfigUserInfo
     *
     * Test LDAP User Info.
     *
     */
    public function testTestLdapConfigUserInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateLdapConfig
     *
     * Update LDAP Configuration.
     *
     */
    public function testUpdateLdapConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOauthClientApp
     *
     * Update OAuth App.
     *
     */
    public function testUpdateOauthClientApp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOidcConfig
     *
     * Update OIDC Configuration.
     *
     */
    public function testUpdateOidcConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePasswordConfig
     *
     * Update Password Config.
     *
     */
    public function testUpdatePasswordConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSamlConfig
     *
     * Update SAML Configuration.
     *
     */
    public function testUpdateSamlConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSessionConfig
     *
     * Update Session Config.
     *
     */
    public function testUpdateSessionConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
